import { client } from '../bot'
import { Message, MessagePayload } from 'discord.js'
import { EmbedBuilder, ClientEvent } from '../utils/classes'

export default class EmbedBuilderdingEvent extends ClientEvent {
    constructor() {
        super({
            name: 'message_embedding',
            description: '–í—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –≤ —á–∞—Ç —Å—Å—ã–ª–∫–∞–º.',
            additional: '–ë–æ—Ç –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ, –∫—É–¥–∞ –≤–µ–¥—ë—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n' +
            '–ï—Å–ª–∏ –ø–µ—Ä–µ–¥ —Å—Å—ã–ª–∫–æ–π —Å—Ç–æ–∏—Ç –∑–Ω–∞–∫ –≤–æ—Å–∫–ª–∏—Ü–∞–Ω–∏—è (!) —Å—Å—ã–ª–∫–∞ –Ω–µ –±—É–¥–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–∞.'
        })    
    }
}

client.on('messageCreate', async (message: Message) => {
    if (message.author.bot) return
    const message_link_regex = message.content.match(/(!)?https?:\/\/\w+\.com\/channels\/(\d+)\/(\d+)\/(\d+)/)

    if (message_link_regex == null) return
    const [, char, guildID, channelID, messageID] = message_link_regex

    //escape char trigger
    if (char || message.content.startsWith(client.prefix)) return

    try {
        const channel = client.guilds.cache.get(guildID).channels.cache.get(channelID)
        if (!channel.isTextBased()) return
        const link_message = await channel.messages.fetch(messageID)

        const content = link_message.content
        const files = Array.from(link_message.attachments.values())
        const embeds = Array.from(link_message.embeds.filter(v => v.data.type == 'rich'))

        if (!content && files.empty && embeds.empty) {
            const Embed = new EmbedBuilder()
                .setDescription('üö´ –°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ.')
            message.channel.send({ embeds: [Embed] })
            return
        }

        const rtmsg = new MessagePayload(message.channel, {
            content,
            allowedMentions: { parse: [] },
            files,
            embeds
        })

        const infoEmbed = new EmbedBuilder()
            .setAuthor({
                name: link_message.author.username,
                iconURL: link_message.author.displayAvatarURL({extension: 'png', size: 4096})
            })
            .setTimestamp(link_message.createdTimestamp)
            .setDescription(`[—Å—Å—ã–ª–∫–∞](https://discord.com/channels/${guildID}/${channelID}/${messageID})`)

        await message.channel.send(rtmsg)
        await message.channel.send({ embeds: [infoEmbed] })
    } catch (error) {}
})